import React, { useState } from 'react';
import styles from '../../styles/signup.module.css';
import NavBar from '@/components/NavBar';
import Footer from '@/components/Footer';
import Image from 'next/image';
import Head from 'next/head';
import { useRouter } from 'next/router';
import axios from 'axios';

const Index = () => {
  const [fullname, setFullName] = useState('');
  const [username, setUserName] = useState('');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [repeatedPass, setRepeatedPass] = useState('');
  const [isChecked, setIsChecked] = useState(false);
  const [showModal, setShowModal] = useState(false);
  const [error, setError] = useState('');
  const router = useRouter();


  const handleSubmitForm = async (e) => {
    e.preventDefault();

    if (password !== repeatedPass) {
      setError('Passwords do not match');
      return;
    }

    const userData = {
      fullname,
      username,
      email,
      password,
    };

    try {
      const response = await axios.post("/api/user", userData);

      if (response.data.success) {
        console.log('User registered successfully:', response.data.data);
        // Reset form fields
        setFullName('');
        setUserName('');
        setEmail('');
        setPassword('');
        setRepeatedPass('');
        setIsChecked(false);
        setShowModal(true);
        // Store user data in local storage
      } else {
        console.error('Registration failed:', response.data);
        setError(response.data.message);
      }

    } catch (error) {
      console.error('Registration failed:', error);
      setError(error.response.data.message || 'Registration failed. Please try again.');
    }

  };
  const handleCheckboxChange = (e) => {
    setIsChecked(e.target.checked);
  };

  const closeModal = () => {
    setShowModal(false);
    router.push('/login');
  };


  return (
    <>
      <Head>
        <title>Sign Up</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <NavBar />
      <div className={styles.signupContainer}>
        <div className={styles.ImageContainer}>
          <Image src="https://res.cloudinary.com/dbbtqwy3w/image/upload/v1686376767/zendora/signup_nsqxis.jpg" alt="signupImage" fill />
        </div>
        <div className={styles.formContainer}>
          <h1>Registration</h1>
          <form onSubmit={handleSubmitForm}>
            <input
              name="name"
              value={fullname}
              onChange={(e) => setFullName(e.target.value)}
              required
              type="text"
              placeholder="Name"
            />
            <input
              type="text"
              required
              name="username"
              value={username}
              onChange={(e) => setUserName(e.target.value)}
              placeholder="Username"
            />
            <input
              type="email"
              required
              name="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              placeholder="Email"
            />
            <input
              type="password"
              required
              name="password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              placeholder="Password"
            />
            <input
              type="password"
              required
              name="repeatedPassword"
              value={repeatedPass}
              onChange={(e) => setRepeatedPass(e.target.value)}
              placeholder="Reenter password"
            />
            <div className={styles.checkboxContainer}>
              <input
                checked={isChecked}
                onChange={handleCheckboxChange}
                type="checkbox"
              />{' '}
              <span>I accept the Terms and Conditions</span>
            </div>
            {error && <p className={styles.error}>{error}</p>} {/* Display the error message */}

            <button type="submit">Registration</button>
          </form>
        </div>
      </div>
      {showModal && (
        <div className={styles.modal}>
          <div className={styles.modalContent}>
            <h2>Sign Up Successful!</h2>
            <p>You have successfully registered an account.</p>
            <button onClick={closeModal}>Close</button>
          </div>
        </div>
      )}
      <Footer />
    </>
  );
};

export default Index;
